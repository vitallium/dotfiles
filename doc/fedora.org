#+TITLE: Fedora installation guide
#+PROPERTY: header-args :comments no :mkdirp yes :tangle no :results output

* Contents :TOC:
- [[#post-installation-steps][Post installation steps]]
  - [[#install-updates][Install updates]]
  - [[#change-the-hostname-to-serenity][Change the hostname to ~serenity~]]
  - [[#reboot-the-system-to-install-and-apply-updates][Reboot the system to install and apply updates]]
  - [[#open-settings-and-verify-the-following-settings][Open ~Settings~ and verify the following settings]]
  - [[#remove-redundant-stuff][Remove redundant stuff]]
  - [[#configure-dnf][Configure ~dnf~]]
  - [[#enable-fstrim][Enable ~fstrim~]]
  - [[#change-default-user-shell-to-fish][Change default user shell to ~fish~]]
  - [[#install-gnome-extensions-applications][Install Gnome extensions applications]]
  - [[#enable-rpm-fusion-repositories][Enable RPM Fusion repositories]]
  - [[#install-drivers-for-intel-gpu][Install drivers for Intel GPU]]
  - [[#enable-and-install-openh264-for-firefox][Enable and install OpenH264 for Firefox]]
  - [[#configure-system-settings][Configure system settings]]
  - [[#enable-visual-studio-code-repository-and-install-it][Enable Visual Studio Code repository and install it]]
  - [[#instal-development-tools][Instal ~Development Tools~]]
  - [[#install-other-packages-i-use][Install other packages I use]]
  - [[#install-packages-for-yubikey][Install packages for ~Yubikey~]]
  - [[#enable-google-chrome-repo-and-install-it][Enable Google Chrome repo and install it]]
  - [[#enable-adw3-copr-and-install-adwaita-theme-for-legacy-applications][Enable adw3 copr and install ~adwaita~ theme for legacy applications]]
  - [[#enable-and-install-vim-stuff][Enable and install ~vim~ stuff]]
  - [[#configure-btrfs-snapshots][Configure BTRFS snapshots]]
- [[#configure-user-environment][Configure user environment]]
  - [[#enable-flathub][Enable flathub]]
  - [[#install-flatpaks][Install ~flatpaks~]]
  - [[#install-git-lfs][Install ~git-lfs~]]
  - [[#enable-profile-sync-daemon][Enable ~profile-sync-daemon~]]
  - [[#install-firefox-gnome-theme][Install firefox-gnome-theme]]
  - [[#install-tmux-plugin-manager][Install Tmux Plugin Manager]]
  - [[#clean-up-unused-directories-and-bookmarks][Clean up unused directories and bookmarks]]
  - [[#install-fonts][Install fonts]]
  - [[#install-docker][Install docker]]
  - [[#install-protonvpn][Install ProtonVPN]]
  - [[#install-mullvadvpn][Install MullvadVPN]]
  - [[#install-xanmod-kernel][Install XanMod Kernel]]
- [[#configure-rust-development-environment][Configure Rust development environment]]
  - [[#install-rustup][Install rustup]]
  - [[#install-fish-completions-for-rustup][Install ~fish~ completions for ~rustup~]]
  - [[#install-rust-src][Install ~rust-src~.]]
  - [[#install-cargo-audit][Install cargo-audit]]
  - [[#install-cargo-nextest][Install cargo-nextest]]
  - [[#install-cargo-edit][Install cargo-edit]]
  - [[#install-cargo-update][Install cargo-update]]
  - [[#install-rustfmt][Install ~rustfmt~]]
  - [[#install-clippy][Install ~clippy~]]
  - [[#install-fd-find][Install ~fd-find~]]
- [[#configure-gnome][Configure Gnome]]
  - [[#install-packages][Install packages]]
  - [[#theme-and-user-interface][Theme and user interface]]
  - [[#peripherals][Peripherals]]
  - [[#key-bindings][Key bindings]]
  - [[#fonts][Fonts]]
  - [[#enable-minimizemaximize-buttons][Enable minimize,maximize buttons]]
  - [[#install-phinger-cursors][Install phinger-cursors]]
  - [[#install-cpu-power][Install cpu-power]]
  - [[#set-casp-lock-as-additional-ctrl][Set Casp Lock as additional Ctrl]]
  - [[#install-brave-browser][Install Brave Browser]]
  - [[#install-sublime-text-and-sublime-merge][Install Sublime Text and Sublime Merge]]
- [[#framework-laptop-configuration][Framework Laptop configuration]]
  - [[#configure-power-saving][Configure power saving]]
  - [[#fix-freeze-during-virtual-machine-startup-with-11th-generation-intel-cpu][Fix freeze during virtual machine startup with 11th generation Intel CPU]]

* Post installation steps
** Install updates
#+begin_src shell :dir /sudo::
dnf upgrade --refresh
#+end_src
** Change the hostname to ~serenity~
#+begin_src shell :dir /sudo::
hostnamectl set-hostname serenity
#+end_src

Verify the hostname.
#+begin_src shell
hostnamectl hostname
#+end_src

** Reboot the system to install and apply updates
** Open ~Settings~ and verify the following settings
- Refresh rate is set to 144Hz for an external monitor.

#+begin_src shell
gsettings set org.gnome.desktop.interface text-scaling-factor 1.25
gsettings set org.gnome.desktop.interface cursor-size 32
#+end_src

** Remove redundant stuff
#+begin_src shell :dir /sudo::
dnf remove -y cheese rhythmbox totem orca \
              gnome-contacts gnome-getting-started-docs \
              nautilus-sendto gnome-shell-extension-* \
              libreoffice-* gnome-characters \
              gnome-photos simple-scan virtualbox-guest-additions \
              gedit gnome-tour gnome-connections mediawriter yelp \
              podman
dnf autoremove -y
#+end_src

** Configure ~dnf~
#+begin_src shell :dir /sudo::
echo 'max_parallel_downloads=10' | tee -a /etc/dnf/dnf.conf
echo 'deltarpm=true' | tee -a /etc/dnf/dnf.conf
#+end_src

** Enable ~fstrim~
#+begin_src shell :dir /sudo::
systemctl enable fstrim.timer
#+end_src

** Change default user shell to ~fish~
#+begin_src shell :dir /sudo::
dnf install -y fish util-linux-user
chsh -s $(which fish) $USER
#+end_src

** Install Gnome extensions applications
#+begin_src shell :dir /sudo::
dnf install -y gnome-tweaks
#+end_src

** Enable RPM Fusion repositories
#+begin_src shell :dir /sudo::
dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
dnf install -y https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
dnf upgrade --refresh
dnf groupupdate -y core
dnf install -y rpmfusion-free-release-tainted
dnf install -y dnf-plugins-core
#+end_src

** Install drivers for Intel GPU
#+begin_src shell :dir /sudo::
dnf groupinstall -y multimedia
dnf install -y intel-media-driver ffmpeg libva \
               libva-utils gstreamer1-vaapi ffmpeg \
               intel-gpu-tools mesa-dri-drivers
#+end_src

Enable Intel GuC and HuC and Framebuffer compression.
#+begin_src shell :dir /sudo::
echo 'options i915 enable_fbc=1 fastboot=1 intel_iommu=on,igfx_off' > /etc/modprobe.d/i915.conf
#+end_src

Verify options for ~i915~.
#+begin_src shell
cat /etc/modprobe.d/i915.conf
#+end_src

Rebuild ~initramfs~.
#+begin_src shell :dir /sudo::
dracut --force
#+end_src

** Enable and install OpenH264 for Firefox
#+begin_src shell :dir /sudo::
dnf config-manager --set-enabled fedora-cisco-openh264
dnf install -y gstreamer1-plugin-openh264 mozilla-openh264
#+end_src

** Configure system settings
#+begin_src shell :dir /sudo::
echo 'fs.inotify.max_user_watches = 524288' >> /etc/sysctl.conf
echo 'vm.swappiness = 10' >> /etc/sysctl.conf
sysctl -p
#+end_src

** Enable Visual Studio Code repository and install it
#+begin_src shell :dir /sudo::
rpm --import https://packages.microsoft.com/keys/microsoft.asc
sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
dnf install -y code
#+end_src

** Instal ~Development Tools~
#+begin_src shell :dir /sudo::
dnf install -y make gcc-c++ gcc make bzip2 \
               openssl-devel libyaml-devel libffi-devel \
               readline-devel zlib-devel gdbm-devel ncurses-devel \
               sqlite sqlite-devel tk-devel xz-devel \
               m4 ncurses-devel autoconf re2 re2-devel \
               libcurl-devel libuuid-devel \
               libvterm-devel gpgme-devel icu krb5-devel gtk4-devel
#+end_src

** Install other packages I use
#+begin_src shell :dir /sudo::
dnf install -y git git-lfs git-delta \
               bat fzf ripgrep \
               profile-sync-daemon \
               editorconfig maildir-utils \
               kernel-tools wl-clipboard \
               cmake ninja-build jq \
               celluloid transmission-gtk \
               ShellCheck ImageMagick \
               perl-core git-extras htop

dnf groupinstall -y "Development Tools"
#+end_src

** Install packages for ~Yubikey~
#+begin_src shell :dir /sudo::
dnf install -y gpg gnupg2 gnupg-pkcs11-scd pcsc-tools pcsc-lite-ccid
systemctl enable --now pcscd
#+end_src

** Enable Google Chrome repo and install it
#+begin_src shell :dir /sudo::
dnf config-manager --set-enabled google-chrome
dnf install -y google-chrome-stable chromedriver
#+end_src

** Enable [[https://github.com/lassekongo83/adw-gtk3][adw3]] copr and install ~adwaita~ theme for legacy applications
#+begin_src shell :dir /sudo::
dnf copr enable -y nickavem/adw-gtk3
dnf install -y adw-gtk3
#+end_src

** Enable and install ~vim~ stuff
#+begin_src shell :dir /sudo::
dnf copr enable -y vitallium/neovim-default-editor
dnf install -y --allowerasing neovim-default-editor
#+end_src

TODO: Enable copr for symlinks ~vim => nvim~.
** Configure BTRFS snapshots
Credits to [[https://davejansen.com/fedora-root-snapshot-support/][Dave Jansen]].
Install snapper
#+begin_src shell :dir /sudo::
dnf install -y snapper python-dnf-plugin-snapper
#+end_src

*** Configure root snapshots
Create configuration for ~/~.
#+begin_src shell :dir /sudo::
snapper -c root create-config /
#+end_src

Create a root-level ~.snapshots~ subvolume.
#+begin_src shell :dir /sudo::
btrfs subvolume delete /.snapshots
#+end_src

Check the ~/etc/fstab~ file and copy&paste the mount point of home but replace ~home~ with ~.snapshots~.
#+begin_src shell :dir /sudo::
mkdir /mnt/btrfs /.snapshots
#+end_src

#+begin_src shell :dir /sudo::
mount /dev/disk/by-uuid/<INSERT_UUID_HERE> /mnt/btrfs
#+end_src

Create new root-level snapshot subvolume.
#+begin_src shell :dir /sudo::
cd /mnt/btrfs
btrfs subvolume create snapshots
btrfs subvolume create docker
btrfs subvolume create development
cd ~
umount /mnt/btrfs
rmdir /mnt/btrfs
#+end_src

Create entries in ~/etc/fstab~.

Auto-mount everything.
#+begin_src shell :dir /sudo::
systemctl daemon-reload
mount -a
#+end_src

Configure ~grub2~ to use ~root~ subvolume.
#+begin_src shell :dir /sudo::
btrfs subvolume set-default 257 /
grubby --update-kernel=ALL --remove-args="rootflags=subvol=root"
#+end_src

* Configure user environment
** Enable [[https://flatpak.org/setup/Fedora][flathub]]
#+begin_src shell :dir /sudo::
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak remote-modify flathub --enable
#+end_src

** Install ~flatpaks~
#+begin_src shell
flatpak install -y flathub com.discordapp.Discord \
                           com.spotify.Client \
                           org.telegram.desktop \
                           com.slack.Slack \
                           com.github.tchx84.Flatseal \
                           org.gtk.Gtk3theme.adw-gtk3 org.gtk.Gtk3theme.adw-gtk3-dark \
                           re.sonny.Junction \
                           com.belmoussaoui.Obfuscate \
                           com.getpostman.Postman \
                           com.obsproject.Studio \
                           com.usebottles.bottles \
                           com.mattjakeman.ExtensionManager

xdg-settings set default-web-browser re.sonny.Junction.desktop
#+end_src

** Install ~git-lfs~
#+begin_src shell
git-lfs install
#+end_src

** Enable ~profile-sync-daemon~
#+begin_src shell
psd
systemctl --user enable --now psd.service
psd preview
#+end_src

** Install [[https://github.com/rafaelmardojai/firefox-gnome-theme][firefox-gnome-theme]]
#+begin_src shell
git clone https://github.com/rafaelmardojai/firefox-gnome-theme/ $HOME/Development/firefox-gnome-theme
cd $HOME/Development/firefox-gnome-theme
./scripts/install.sh
#+end_src

** Install [[https://github.com/tmux-plugins/tpm][Tmux Plugin Manager]]
#+begin_src shell
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#+end_src

** Clean up unused directories and bookmarks
#+begin_src shell
rm -rf ~/Documents ~/Music ~/Public ~/Templates ~/Desktop
echo "file:///home/vitaly/Downloads" > ~/.config/gtk-3.0/bookmarks
#+end_src

** Install fonts
*** Iosevka
Install ~Etoile~ variant for Org mode in Emacs.
#+begin_src shell :dir /sudo::
dnf copr enable -y peterwu/iosevka
dnf install -y iosevka-etoile-fonts
#+end_src

** Install docker
#+begin_src shell :dir /sudo::
dnf config-manager -y \
    --add-repo \
    https://download.docker.com/linux/fedora/docker-ce.repo
dnf install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
#+end_src

#+begin_src shell :dir /sudo::
usermod -aG docker $USER
#+end_src

Disable copy-on-write (COW).
#+begin_src shell :dir /sudo::
mkdir -p /var/lib/docker
chattr +C /var/lib/docker
#+end_src

Enable and start ~systemd~ services.
#+begin_src shell :dir /sudo::
systemctl enable --now docker.service
systemctl enable --now containerd.service
#+end_src

** Install ProtonVPN
#+begin_src shell :dir /sudo::
rpm -i https://protonvpn.com/download/protonvpn-stable-release-1.0.1-1.noarch.rpm
dnf install -y protonvpn
#+end_src

** Install MullvadVPN
#+begin_src shell :dir /sudo::
dnf install -y https://mullvad.net/media/app/MullvadVPN-2022.4_x86_64.rpm
#+end_src

** Install XanMod Kernel
#+begin_src shell :dir /sudo::
sudo dnf copr enable -y rmnscnce/kernel-xanmod
sudo dnf install kernel-xanmod-edge -y
#+end_src

* Configure Rust development environment
** Install [[https://rustup.rs/][rustup]]
#+begin_src shell :results output silent
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#+end_src
** Install ~fish~ completions for ~rustup~
#+begin_src shell
rustup completions fish rustup >> $HOME/.config/fish/completions/rustup.fish
#+end_src

#+begin_src shell
curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz | gunzip -c - > ~/.local/bin/rust-analyzer
chmod +x ~/.local/bin/rust-analyzer
#+end_src

** Install ~rust-src~.
#+begin_src shell
rustup component add rust-src
#+end_src

** Install [[https://crates.io/crates/cargo-audit][cargo-audit]]
#+begin_quote
Audit Cargo.lock for crates with security vulnerabilities
#+end_quote

#+begin_src shell
cargo install cargo-audit --features=fix
#+end_src

** Install [[https://crates.io/crates/cargo-nextest][cargo-nextest]]
#+begin_quote
A next-generation test runner for Rust.
#+end_quote

#+begin_src shell
cargo install cargo-nextest
#+end_src
** Install [[https://crates.io/crates/cargo-edit][cargo-edit]]
#+begin_quote
This tool extends Cargo to allow you to add, remove, and upgrade dependencies by modifying your Cargo.toml file from the command line.
#+end_quote

#+begin_src shell
cargo install cargo-edit
#+end_src
** Install [[https://crates.io/crates/cargo-update][cargo-update]]
#+begin_quote
A cargo subcommand for checking and applying updates to installed executables
#+end_quote

#+begin_src shell
cargo install cargo-update
#+end_src
** Install ~rustfmt~
#+begin_src shell
rustup component add rustfmt
#+end_src
** Install ~clippy~
#+begin_src shell
rustup component add clippy
#+end_src
** Install ~fd-find~
#+begin_src shell
cargo install fd-find
#+end_src
* Configure Gnome
** Install packages
#+begin_src shell :dir /sudo::
dnf install -y dconf-editor \
               webp-pixbuf-loader \
               gthumb \
               kitty

# Restart nautilus
nautilus -q
#+end_src

Install ~gnome-shell~ with patches:
#+begin_src shell :dir /sudo::
dnf copr enable -y calcastor/gnome-patched
dnf upgrade -y --refresh
#+end_src

** Theme and user interface
#+begin_src shell
gsettings set org.gnome.desktop.interface clock-show-weekday true
gsettings set org.gnome.desktop.interface font-antialiasing "rgba"
gsettings set org.gnome.desktop.interface gtk-theme "adw-gtk3"
#+end_src

Set the application on the dash.
#+begin_src shell
gsettings set org.gnome.shell favorite-apps "['firefox.desktop', 'emacs.desktop', 'org.gnome.Terminal.desktop', 'org.gnome.Nautilus.desktop', 'org.telegram.desktop.desktop']"
#+end_src

Resize windows with ~Super+Right Click~:
#+begin_src shell
gsettings set org.gnome.desktop.wm.preferences resize-with-right-button true
#+end_src

*** Adjust search locations
#+begin_src shell
gsettings set org.gnome.desktop.search-providers disabled "['org.gnome.clocks.desktop']"
#+end_src
*** Nautilus
Sort directories first.
#+begin_src shell
gsettings set org.gtk.Settings.FileChooser sort-directories-first true
#+end_src
** Peripherals
Enable blazingly fast keyboard repeat.
#+begin_src shell
gsettings set org.gnome.desktop.peripherals.keyboard delay 150
#+end_src

** Key bindings
#+begin_src shell :shebang "#!/bin/bash"
gsettings set org.gnome.mutter.keybindings toggle-tiled-left "['<Super>h']"
gsettings set org.gnome.mutter.keybindings toggle-tiled-right "['<Super>l']"

gsettings set org.gnome.settings-daemon.plugins.media-keys screensaver "['<Super>Return']"

gsettings set org.gnome.desktop.wm.keybindings minimize "['<Super>apostrophe']"
gsettings set org.gnome.desktop.wm.keybindings maximize "['<Super>k']"
gsettings set org.gnome.desktop.wm.keybindings unmaximize "['<Super>j']"

END=9; for num in $(seq 1 $END); do
  gsettings set org.gnome.shell.keybindings switch-to-application-$num "[]";
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-$num "['<Super>$num']"
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-$num "['<Super><Shift>$num']"
done
#+end_src

** Fonts
Trying the PopOS font configuration.
#+begin_src shell :dir /sudo::
dnf install -y 'mozilla-fira*' 'google-roboto*'
#+end_src

#+begin_src shell
gsettings set org.gnome.desktop.interface document-font-name "Roboto Slab 11"
gsettings set org.gnome.desktop.interface font-name "Fira Sans Semi-Light 10"
gsettings set org.gnome.desktop.interface monospace-font-name "Source Code Pro 10"
gsettings set org.gnome.desktop.wm.preferences titlebar-font "Source Sans 3 Semi-Bold 10"
#+end_src

** Enable minimize,maximize buttons
#+begin_src shell
gsettings set org.gnome.desktop.wm.preferences button-layout 'appmenu:minimize,maximize,close'
#+end_src

** Install [[https://github.com/phisch/phinger-cursors][phinger-cursors]]
#+begin_src shell :dir /sudo::
wget -cO- https://github.com/phisch/phinger-cursors/releases/latest/download/phinger-cursors-variants.tar.bz2 | tar xfj - -C /usr/share/icons
#+end_src

And enable them.
#+begin_src shell
gsettings set org.gnome.desktop.interface cursor-theme "phinger-cursors"
#+end_src

** Install [[https://github.com/deinstapel/cpupower][cpu-power]]
#+begin_src shell :dir /sudo::
dnf copr enable -y fin-ger/cpupower
dnf install -y gnome-shell-extension-cpupower
#+end_src

** Set Casp Lock as additional Ctrl
#+begin_src shell
gsettings set org.gnome.desktop.input-sources xkb-options "['caps:ctrl_modifier']"
#+end_src

** Install Brave Browser
#+begin_src shell :dir /sudo::
dnf config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/
rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
dnf install -y brave-browser
#+end_src

** Install Sublime Text and Sublime Merge
#+begin_src shell :dir /sudo::
rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg
dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo
dnf install -y sublime-text sublime-merge
#+end_src

* Framework Laptop configuration
** Configure power saving
#+begin_src shell :dir /sudo::
sudo grubby --update-kernel=ALL --args="nvme.noacpi=1"
sudo grubby --update-kernel=ALL --args="nmi_watchdog=0"
#+end_src

Enable audio power saving.
#+begin_src shell :dir /sudo::
echo 'options snd_hda_intel power_save=1' > /etc/modprobe.d/audio_powersave.conf
#+end_src

Enable Wi-Fi power saving.
#+begin_src shell :dir /sudo::
echo 'options iwlwifi power_save=1 uapsd_disable=1' > /etc/modprobe.d/iwlwifi.conf
echo 'options iwlmvm power_scheme=3' >> /etc/modprobe.d/iwlwifi.conf
#+end_src

** [[https://wiki.archlinux.org/title/VirtualBox#Freeze_during_virtual_machine_startup_with_11th_generation_Intel_CPU][Fix freeze during virtual machine startup with 11th generation Intel CPU]]
#+begin_src shell :dir /sudo::
sudo grubby --update-kernel=ALL --args="ibt=off"
#+end_src
