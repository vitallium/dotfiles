#+TITLE:      Fish Shell Configuration
#+AUTHOR:     Vitaly Slobodin
#+PROPERTY:   header-args+ :comments both
#+PROPERTY:   header-args+ :mkdirp yes

* Aliases
Let's start with defining some useful aliases that I use everyday.

Aliases for [[~/projects/gitlab/gdk/gitlab/ee/app/assets/javascripts/admin/init_qrtly_reconciliation_alert.js][tmux]].
#+begin_src fish :tangle ~/.config/fish/aliases.fish
alias t="tmux"
alias ta="t a -t"
alias tls="t ls"
alias tn="t new -t"
#+end_src

Use [[https://github.com/sharkdp/bat][bat]] as =cat=.
#+begin_src fish :tangle ~/.config/fish/aliases.fish
alias t="tmux"
alias cat='bat --paging=never'
#+end_src

Run =mbsync= with custom configuration file.
#+begin_src fish :tangle ~/.config/fish/aliases.fish
alias mbsync="mbsync -c \"$HOME/.config/isync/mbsyncrc\""
#+end_src
* XDG
Export XDG variables just in case.
#+begin_src fish :tangle ~/.config/fish/xdg.fish
set --export XDG_CONFIG_HOME "$HOME/.config"
set --export XDG_CACHE_HOME "$HOME/.cache"
set --export XDG_DATA_HOME "$HOME/.local/share"
#+end_src
* Functions
** Functions for working on Chromium
Define functions for common tasks when I work on Chromium.
#+begin_src fish :tangle ~/.config/fish/functions/chromium.deps.fish
function deps --description "run gclient sync"
  env GYP_DEFINES=disable_nacl=1 gclient sync --jobs=70
end
#+end_src

#+begin_src fish :tangle ~/.config/fish/functions/chromium.hooks.fish
function hooks --description "run gclient runhooks"
  env GYP_DEFINES=disable_nacl=1 gclient runhooks
end
#+end_src

#+begin_src fish :tangle ~/.config/fish/functions/chromium.acch.fish
function acch --description "activate chromium build mode"
  pathadd "$HOME/.local/bin/depot_tools"
end
#+end_src
** Functions for gitignore
Useful function to quickly create and fill ~.gitignore~ file with most common scenarios for a given language or tool.
#+begin_src fish :tangle ~/.config/fish/functions/gi.fish
function gi --description "Create useful .gitignore files for your project"
  curl -sL https://www.toptal.com/developers/gitignore/api/$argv
end
#+end_src
** Adds a path to PATH :)
#+begin_src fish :tangle ~/.config/fish/functions/pathadd.fish
function pathadd -a dir --description "Adds a path to PATH :)"
  if test -d $dir
    set -gx PATH $dir $PATH
  end
end
#+end_src
* Paths
Add some paths
#+begin_src fish :tangle ~/.config/fish/paths.fish
pathadd ~/.local/bin

# jsvu
pathadd ~/.jsvu

# golang
pathadd $GOBIN

# rust
pathadd ~/.cargo/bin
#+end_src
* Fisher
#+begin_quote
A plugin manager for Fish—the friendly interactive shell.
#+end_quote

Manage functions, completions, bindings, and snippets from the command line. Extend your shell capabilities, change the look of your prompt and create repeatable configurations across different systems effortlessly.

Install it.
#+begin_src sh
curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
#+end_src
** Plugins:
*** [[https://github.com/mattgreen/lucid.fish][lucid]]
#+begin_quote
A minimalist, high-performance fish prompt with async git dirty checks that just work.
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
mattgreen/lucid.fish
#+end_src
*** [[https://github.com/laughedelic/pisces][laughedelic/pisces]]
#+begin_quote
pisces ['paɪsiz] is a plugin for fish that helps you to work with paired symbols like () and '' in the command line. Similar to your favorite text editor!
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
laughedelic/pisces
#+end_src
*** [[https://github.com/joehillen/to-fish][joehillen/to-fish]]
#+begin_quote
A directory bookmarking tool for fish-shell.
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
joehillen/to-fish
#+end_src
*** [[https://github.com/danhper/fish-ssh-agent][danhper/fish-ssh-agent]]
#+begin_quote
Utility functions to start your ssh agent when using fish shell. You will only need to run ssh-add and type your password once, after the running ssh_agent should do the work for you.
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
danhper/fish-ssh-agent
#+end_src
*** [[https://github.com/oh-my-fish/plugin-foreign-env][oh-my-fish/plugin-foreign-env]]
#+begin_quote
Foreign environment wraps application execution in a way that environment variables that are exported or modified get imported back into fish. This makes possible running popular bash scripts, like the excellent nvm.
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
oh-my-fish/plugin-foreign-env
#+end_src
*** [[https://github.com/dracula/fish][dracula/fish]]
#+begin_quote
A dark theme
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
dracula/fish
#+end_src
*** [[https://github.com/PatrickF1/fzf.fish][PatrickF1/fzf.fish]]
#+begin_quote
Augment your Fish command line with mnemonic key bindings to efficiently find what you need using fzf.
#+end_quote

#+begin_src fish :tangle ~/.config/fish/fish_plugins
PatrickF1/fzf.fish
#+end_src
* Configuration
Set locale to ~UTF-8~.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -x LC_ALL en_US.UTF-8
#+end_src

Load aliases, functions, xdg, etc.
#+begin_src fish :tangle ~/.config/fish/config.fish
set configs aliases functions paths xdg
for config in $configs
  if test -e $__fish_config_dir/$config.fish
    . $__fish_config_dir/$config.fish
  end
end
set -e configs
#+end_src

Enable integration with [[https://github.com/asdf-vm/asdf][asdf]].
#+begin_src fish :tangle ~/.config/fish/config.fish
if test -e $HOME/.asdf/asdf.fish
  . $HOME/.asdf/asdf.fish
end
#+end_src

Enable [[https://github.com/direnv/direnv][direnv]] via ~asdf-vm~.
#+begin_src fish :tangle ~/.config/fish/config.fish
eval (asdf exec direnv hook fish)
#+end_src
** Environment variables
Disable ~fish~ greeting.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx fish_greeting              ''
#+end_src

Set Go paths.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx GOPATH                     $HOME/.go
set -gx GOBIN                      $HOME/.go/bin
set -gx GO111MODULE                on
#+end_src

Set the [[https://github.com/BurntSushi/ripgrep][ripgrep]] configuration file path.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx RIPGREP_CONFIG_PATH       "$HOME/.ripgreprc"
#+end_src

Configure [[https://github.com/junegunn/fzf][fzf]].
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx _ZO_FZF_OPTS              "--height 40% --reverse $FZF_DEFAULT_OPTS"
set -gx FZF_DEFAULT_COMMAND       'rg --files'
set -gx FZF_CTRL_T_COMMAND        'rg --files'

fzf_configure_bindings
#+end_src

Set Wayland backends.
#+begin_src fish :tangle no
set -gx CLUTTER_BACKEND     wayland
set -gx SDL_VIDEODRIVER     wayland
set -gx MOZ_ENABLE_WAYLAND  1
set -gx XDG_CURRENT_DESKTOP sway
#+end_src
** Colors
*** Light
Set [[https://github.com/sharkdp/bat][bat]] theme.
#+begin_src fish :tangle no
set -gx BAT_THEME                  ansi
#+end_src

*** Dracula
Set [[https://github.com/sharkdp/bat][bat]] theme.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx BAT_THEME                  Dracula
#+end_src

Set Dracula-colors for fzf.
#+begin_src fish :tangle ~/.config/fish/config.fish
set -gx FZF_DEFAULT_OPTS          "--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
#+end_src
