# vim:ft=ruby
Pry.editor = 'nvim'

if ENV.fetch('INSIDE_EMACS', false)
  Pry.config.correct_indent = false
  Pry.config.pager = false
else
  if Pry::Prompt[:rails]
    Pry.config.prompt = Pry::Prompt[:rails]
  else
    Pry.config.prompt =  Pry::Prompt[:nav]
  end
end

Pry::Commands.command /^$/, 'repeat last command' do
  pry_instance.run_command Pry.history.to_a.last
end

# == Pry-Nav - Using pry as a debugger ==
Pry.commands.alias_command 't', 'backtrace'
Pry.commands.alias_command 's', 'step'
Pry.commands.alias_command 'n', 'next'
Pry.commands.alias_command 'c', 'continue'
Pry.commands.alias_command 'f', 'finish'
Pry.commands.alias_command 'ff', 'frame'
Pry.commands.alias_command 'u', 'up'
Pry.commands.alias_command 'd', 'down'
Pry.commands.alias_command 'b', 'break'
Pry.commands.alias_command 'w', 'whereami'

Pry.config.commands.alias_command "h", "hist -T 20", desc: "Last 20 commands"
Pry.config.commands.alias_command "hg", "hist -T 20 -G", desc: "Up to 20 commands matching expression"
Pry.config.commands.alias_command "hG", "hist -G", desc: "Commands matching expression ever used"
Pry.config.commands.alias_command "hr", "hist -r", desc: "hist -r <command number> to run a command"

# Fix deprecation warning, so override default for now.
# Remember to eventually remove this!
# WARNING: the show-doc command is deprecated. It will be removed from future Pry versions.
# Please use 'show-source' with the -d (or --doc) switch instead
Pry.commands.alias_command '?', 'show-source -d'

require 'pry-byebug'

if defined?(PryByebug)
   def pp(obj)
     Pry::ColorPrinter.pp(obj)
   end
end

begin
  require 'pry-reload'
rescue LoadError => err
  puts 'pry-reload is not available. Did you forget to install it?'
end

# Use awesome_print (or amazing_print)
begin
  require 'awesome_print'
  AwesomePrint.pry!
rescue LoadError => err
  begin
    puts "no awesome_print :( #{err}"
    puts "trying amazing_print"
    require 'amazing_print'
    AmazingPrint.pry!
  rescue LoadError => err2
    puts "no awesome_print :( #{err2}"
  end
end

# Hit Enter to repeat last command
Pry::Commands.command /^$/, "repeat last command" do
  pry_instance.run_command Pry.history.to_a.last
end

before_session_hook = Pry::Hooks.new.add_hook(:before_session, :add_dirs_to_load_path) do
  # adds the directories /spec and /test directories to the path if they exist and not already included
  current_dir = `pwd`.chomp
  dirs_added = %w(spec test presenters lib).
    map{ |d| "#{current_dir}/#{d}" }.
    map do |path|
    if File.exist?(path) && !$:.include?(path)
      i$: << path
      path
    end
  end.compact
  puts "Added #{ dirs_added.join(", ") } to load path per hook in ~/.pryrc." unless dirs_added.empty?
end
before_session_hook.exec_hook(:before_session)

